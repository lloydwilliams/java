## -*- shell-script -*- ######################################################
##                                                                          ##
##  JBoss EAP Bootstrap Script Configuration                                ##
##                                                                          ##
##############################################################################

#
# This file is optional; it may be removed if not needed.
#

#
# Specify the maximum file descriptor limit, use "max" or "maximum" to use
# the default, as queried by the system.
#
# Defaults to "maximum"
#
#MAX_FD="maximum"

#
# Specify the profiler configuration file to load.
#
# Default is to not load profiler configuration file.
#
#PROFILER=""

#
# Specify the location of the Java home directory.  If set then $JAVA will
# be defined to $JAVA_HOME/bin/java, else $JAVA will be "java".
#
#JAVA_HOME="/opt/java/jdk"
JAVA_HOME="/Library/Java/JavaVirtualMachines/jdk1.8.0_333.jdk/Contents/Home"

#
# Specify the exact Java VM executable to use.
#
#JAVA=""

#LLOYD
JBOSS_HOME=/Users/lloyd.williams/u01/jboss/jboss-eap-7.1

if [ "x$JBOSS_MODULES_SYSTEM_PKGS" = "x" ]; then
   # JBOSS_MODULES_SYSTEM_PKGS="org.jboss.byteman,org.jboss.logmanager"
   JBOSS_MODULES_SYSTEM_PKGS="org.jboss.byteman"
fi

# Uncomment the following line to prevent manipulation of JVM options
# by shell scripts.
#
#PRESERVE_JAVA_OPTS=true

#-Djboss.modules.system.pkgs=org.jboss.byteman,org.jboss.logmanager
#-Djava.util.logging.manager=org.jboss.logmanager.LogManager
#-Xbootclasspath/p:<path_to_jar_containing_jboss-logmanager_classes>

# -Xbootclasspath/p:{$JBOSS_HOME}/modules/system/layers/base/org/wildfly/common/main/wildfly-common-1.2.0.Final-redhat-1.jar 
# -Xbootclasspath/p:{$JBOSS_HOME}/modules/system/layers/base/org/jboss/logmanager/main/jboss-logmanager-2.0.7.Final-redhat-1.jar

#/opt/app/jboss-eap-7.2/modules/system/layers/base/org/jboss/logmanager/main/jboss-logmanager-2.1.5.Final-redhat-00001.jar
#/opt/app/jboss-eap-7.2/modules/system/layers/base/org/jboss/log4j/logmanager/main/log4j-jboss-logmanager-1.1.6.Final-redhat-00001.jar
#/opt/app/jboss-eap-7.2/modules/system/layers/base/org/wildfly/common/main/wildfly-common-1.4.0.Final-redhat-1.jar

#
# Specify options to pass to the Java VM.
#
if [ "x$JAVA_OPTS" = "x" ]; then
   JAVA_OPTS="-Xms1303m -Xmx1303m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Djava.net.preferIPv4Stack=true"
   #JAVA_OPTS="$JAVA_OPTS -Xbootclasspath/p:${JBOSS_HOME}/modules/system/layers/base/org/wildfly/common/main/wildfly-common-1.2.0.Final-redhat-1.jar"
   #JAVA_OPTS="$JAVA_OPTS -Xbootclasspath/p:${JBOSS_HOME}/modules/system/layers/base/org/jboss/logmanager/main/jboss-logmanager-2.0.7.Final-redhat-1.jar"
   #JAVA_OPTS="$JAVA_OPTS -Xbootclasspath/p:${JBOSS_HOME}/modules/system/layers/base/org/jboss/log4j/logmanager/main/log4j-jboss-logmanager-1.1.4.Final-redhat-1.jar"

   JAVA_OPTS="$JAVA_OPTS -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS -Djava.awt.headless=true"
#   -Dorg.jboss.logging.Logger.pluginClass=org.jboss.logging.logmanager.LoggerPluginImpl
   #JAVA_OPTS="$JAVA_OPTS -Djboss.modules.system.pkgs=$JBOSS_MODULES_SYSTEM_PKGS -Djava.awt.headless=true -Djava.util.logging.manager=org.jboss.logmanager.LogManager"

   JAVA_VM="-javaagent:/Users/lloyd.williams/u01/datadog/dd-java-agent.jar ${JAVA_VM}"
   DATADOG_OPTS="-Ddd.service=jboss -Ddd.env=dev -Ddd.version=7.1.0 -Ddd.tags=jboss:JBoss_EAP_7.1.0.GA -Ddd.jmxfetch.enabled=true -Ddd.jmxfetch.jboss_wildfly.enabled=true -Ddd.trace.agent.port=8136"

#   DATADOG_OPTS="-Ddd.service=jboss -Ddd.env=dev -Ddd.version=7.1.0 -Ddd.tags=jboss:JBoss_EAP_7.1.0.GA -Ddd.trace.agent.port=8136"
# -Ddd.jmxfetch.enabled=true -Ddd.jmxfetch.jboss_wildfly.enabled=true
# jboss_wildfly = -Ddd.jmxfetch.jboss_wildfly.enabled=true

   #JMX_OPTS="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=9990 -Dcom.sun.management.jmxremote.rmi.port=9990"
   #JAVA_OPTS="${JAVA_VM} ${JAVA_OPTS} ${JMX_OPTS} ${DATADOG_OPTS}"
   JAVA_OPTS="${JAVA_VM} ${JAVA_OPTS} ${DATADOG_OPTS}"
else
   echo "JAVA_OPTS already set in environment; overriding default settings with values: $JAVA_OPTS"
fi

# echo "**** JAVA_OPTS: $JAVA_OPTS"

# Sample JPDA settings for remote socket debugging
#JAVA_OPTS="$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n"

# Sample JPDA settings for shared memory debugging
#JAVA_OPTS="$JAVA_OPTS -agentlib:jdwp=transport=dt_shmem,server=y,suspend=n,address=jboss"

# Uncomment to not use JBoss Modules lockless mode
#JAVA_OPTS="$JAVA_OPTS -Djboss.modules.lockless=false"

# Uncomment to gather JBoss Modules metrics
#JAVA_OPTS="$JAVA_OPTS -Djboss.modules.metrics=true"

# Uncomment this to run with a security manager enabled
# SECMGR="true"

# Uncomment this in order to be able to run WildFly on FreeBSD
# when you get "epoll_create function not implemented" message in dmesg output
#JAVA_OPTS="$JAVA_OPTS -Djava.nio.channels.spi.SelectorProvider=sun.nio.ch.PollSelectorProvider"

# enable garbage collection logging if not set in environment differently
if [ "x$GC_LOG" = "x" ]; then
   GC_LOG="true"
else
   echo "GC_LOG set in environment to $GC_LOG"
fi
